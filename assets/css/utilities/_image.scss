
// MAIN

.image {
  @include radius-parent;
  position: relative;
  width: fit-content;
  margin: 0 auto;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  --image-width: calc(100cqw - var(--image-margin, 0em) * 2);
  .box__icon--top {
    color: var(--invert);
    filter: drop-shadow($shadow);
    margin: 0;
    position: absolute;
    top: calc(50% - var(--icon-size) / 2);
    // left: calc(50% - var(--icon-size) / 2);
    z-index: 2;
  }
}
.image__inner {
  @include radius;
  position: relative;
  max-width: 100%;
  width: auto; // for svg that have width
  height: auto;
  fill: initial;
  overflow: hidden;
  &:not(.image--border *) {
    --radius-end: inherit;
  }
}
.icon.image__inner {
  height: 100%;
  &:not([width]) {
    width: var(--box-inner);
  }
}

// ALIGN

.image--left {
  justify-content: flex-start;
  margin-left: 0;
}
.image--right {
  justify-content: flex-end;
  margin-right: 0;
}


// TYPES

.image__inner--shade {
  width: 100%;
  height: 100%;
  min-height: calc(var(--image-width) / (var(--image-ratio, 16/9)));
  background-image: linear-gradient($main, transparent);
  &:has(+ .image__inner) {
    position: absolute;
  }
  + .box__icon--top {
    color: var(--base);
  }
}


// RATIO

.image--circle,
.image--ratio {
  --image-ratio: 1/1;
  --image-ratio-height: calc((100cqw - 2 * var(--image-border-width, 0em)) / (var(--image-ratio)));
  width: 100%;
  &:not(:has(.image__inner)) {
    height: var(--image-ratio-height);
  }
  .image__inner {
    width: 100%;
    height: var(--image-ratio-height);
    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center;
    }
  }
}


// BORDER

.image--border {
  --image-border-width: .5em;
  padding: var(--image-border-width);
  &::before {
    content: '';
    @include radius-child;
    @include like-bg-cover;
    background-color: var(--base);
  }
  .image__inner {
    --radius-pd: calc(var(--image-border-width) * -1);
    // background-color: var(--bg-color);
  }
  // picture[style] {
  //   background-image: none;
  // }
}


// CONTAIN

.image--contain {
  .image__inner {
    // display: grid;
    // place-content: center;
    background-image: none;
    img {
      // height: auto;
      // max-height: calc(100cqw * var(--image-ratio));
      object-fit: contain;
    }
  }
  &:not(.image--inset:not(.image--border)) {
    .image__inner {
      img {
        @include radius-child;
      }
    }
  }
}


// INSET

.image--inset {
  // &, .icon.image__inner:not([width]) {
  //   width: 100cqw;
  // }
  margin: var(--image-margin);
  width: var(--image-width);
  --image-margin: calc(var(--box-pd) * -1);
  --image-inset-block-margin: calc(max(var(--box-pd), 1em) - var(--box-gap));
  // --image-inset-pd-radius:
  --radius-pd: var(--image-inset-pd-radius);
  .image__inner {
    --radius-pd: calc(var(--image-inset-pd-radius) - var(--image-border-width, 0em));
  }
  // Not first child
  &:not(:where(
    :first-child,
    .bg-color + *,
    .box__title.hide + *
  )) {
    margin-top: var(--image-inset-block-margin);
    &, .image__inner {
      --radius-top: 0em;
    }
  }
  // Not last child
  &:not(:last-child, :has(+ .box__button.hide:last-child)) {
    margin-bottom: var(--image-inset-block-margin);
    &, .image__inner {
      --radius-bottom: 0em;
    }
  }
}


// FOR IFRAME

iframe.image__inner {
  width: var(--box-inner);
}
.image--inset {
  iframe.image__inner {
    width: calc(100cqw + var(--box-pd) * 2);
  }
}
.md {
  iframe.image__inner {
    width: calc(100cqw + var(--box-pd) * 2);
  }
}
// .image {
//   &:not(
//     .image--ratio,
//     .image--circle
//   ) {
//     &.image--border {
//       iframe.image__inner {
//         width: var(--box-inner);
//         height: calc(var(--box-inner) * .5625);
//         max-width: calc((var(--box-inner) - 1em));
//         max-height: calc((var(--box-inner) - 1em) * .5625); // 16x9
//       }
//     }
//     &.image--inset {
//       iframe.image__inner {
//         width: calc(100cqw + var(--box-pd) * 2);
//         height: calc((100cqw + var(--box-pd) * 2) * .5625); // 16x9
//       }
//       &.image--border {
//         iframe.image__inner {
//           max-width: calc(100cqw - 1em + var(--box-pd) * 2);
//           max-height: calc((100cqw - 1em + var(--box-pd) * 2) * .5625); // 16x9
//         }
//       }
//     }
//   }
// }


// move here for priority


// CIRCLE

.image--circle {
  &, .image__inner {
    &:not(.aux.aux) { // only for priority
      --radius-top: 50%;
      --radius-bottom: 50%;
      @include circle;
    }
  }
  @if $chamfer {
    &.image--border {
      padding: calc(var(--image-border-width) / .7071);
    }
  }
}


// WITH ICON TOP

.image--icon-top .image__inner {
  opacity: .5;
}


// IFRAME POSTER

[data-iframe]:not(.aux.aux) {
  cursor: pointer;
  ~ .icon {
    cursor: pointer;
    width: 5em;
    height: 5em;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: var(--base);
    fill: var(--base-in);
    transition: color .1s;
    filter: drop-shadow($shadow);
    animation: data-iframe 5s 0s infinite;
    &:has([href$="#youtube-iframe"]) {
      width: 4.25em;
      height: 3em;
    }
  }
  &:hover ~ .icon,
  ~ .icon:hover {
    color: var(--hover);
    fill: var(--hover-in);
  }
  &:active ~ .icon,
  ~ .icon:active {
    color: var(--active);
    fill: var(--active-in);
  }
}


// SVG EXCEPTIONS

.box:not(.bg) // when not background
> .image:not(.image--border):not(.md *) // without radius and not content
> .image__inner:where(svg, .icon, img[src*=".svg"]) { // svg image
  overflow: unset;
  @include hide-radius;
}
.icon.image__inner {
  width: 100%;
}
// SVG from IMG tag like SVG tag
/*! purgecss start ignore */
img[src*=".svg"].image__inner {
  object-fit: contain;
}
/*! purgecss end ignore */


// SHADOW

.image:not(.box.bg *, .box--hide-shadow *) {
  filter: drop-shadow($shadow);
}


// BOX HOVER

.box--go {
  > .image .image__inner {
    &:where(.icon),
    img {
      transition: transform .3s;
    }
  }
  // HOVER
  &:has(.search__result-item-link:focus),
  &:hover,
  &:focus {
    > .image .image__inner:not(.image__inner--hover) {
      &:where(.icon),
      img {
        transform: scale(1.2) rotate(2deg);
      }
    }
  }
  // 2N CHILD
  &:nth-child(2n) {
    &:has(.search__result-item-link:focus),
    &:hover,
    &:focus {
      > .image .image__inner:not(.image__inner--hover) {
        &:where(.icon),
        img {
          transform: scale(1.2) rotate(-2deg);
        }
      }
    }
  }
}
.box {
  // IMAGE HOVER
  > .image--hover {
    .image__inner:not(.image__inner--hover) {
      transition: transform .3s, opacity .3s;
    }
    .image__inner--hover {
      position: absolute;
      opacity: 0;
      transition: opacity .3s;
    }
    &.image--border {
      .image__inner--hover {
        margin: 0;
        max-width: inherit;
        max-height: inherit;
      }
    }
  }
  // IMAGE HOVER HOVER
  &:has(.search__result-item-link:focus),
  &:hover,
  &:focus {
    > .image--hover {
      .image__inner:not(.image__inner--hover) {
        opacity: 0;
      }
      .image__inner--hover {
        opacity: 1;
      }
    }
  }
  // GRAYSCALE
  &:not(#aux) {
    > .image--gray {
      &.bg-figure-image,
      .image__inner {
        filter: var(--grayscale);
        transition: filter .3s;
      }
    }
    // HOVER
    &:has(.search__result-item-link:focus),
    &:hover,
    &:focus,
    &:active {
      > .image--gray {
        &.bg-figure-image,
        .image__inner {
          filter: none;
          transform: none;
        }
      }
    }
  }
}


// HIDE RADIUS

.box--hide-radius {
  .image,
  .image__inner {
    @include hide-radius;
  }
}
