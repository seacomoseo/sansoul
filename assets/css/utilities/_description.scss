
.description iframe:not(.description__figure *) {
  filter: drop-shadow($shadow);
}
@media (min-width: $screen-lg) {
  .description__figure--float {
    margin: 0;
    .image {
      width: auto;
      display: block;
      overflow: unset;
    }
    img,
    svg {
      &:not(#aux) {
        float: left;
        shape-outside: var(--shape);
        shape-margin: 1em;
        margin: 0 1em 1em 0;
        position: relative;
        z-index: -1;
        max-width: 50%;
      }
    }
    svg:not(#aux) {
      top: unset;
    }
    &:first-child + *:not(#aux) {
      margin-top: 0;
    }
  }
  .description__figure--float-right {
    img,
    svg {
      &:not(#aux) {
        float: right;
        margin: 0 0 1em 1em;
      }
    }
  }
}
.description__figure--float {
  &:first-child {
    margin-top: 0;
  }
  &[style*='.svg'] {
    filter: none;
  }
}
.description picture {
  margin: 0 auto;
}
.description__figcaption {
  @include font-quotes;
  margin-top: 1em;
  color: var(--alt);
  text-align: center;
}
.description__heading a {
  color: inherit;
}
.description__heading.underline {
  margin-bottom: 0;
  .description__heading-link {
    display: block;
  }
  &:after {
    display: inline-block;
    margin: 0;
    position: relative;
    top: -0.625em;
  }
}
.title + .subtitle {
  margin-top: -.75rem;
}
.description {
  a,
  [data-h],
  [data-b] {
    &:not(.box, .button, button, .description__heading > *) {
      @include font-base-bold;
      line-height: $line-height-base;
    }
  }
  em {
    @include font-cursive;
    color: var(--subtitle);
  }
  // strong {
  //   color: var(--subtitle);
  // }
  h2, h3, h4, h5, h6 {
    &:not(:first-child) {
      margin-top: 2em;
    }
  }
  ul, ol {
    display: table;
    text-align: left;
    padding: 0;
    margin: 0 auto 1em;
    &:last-child {
      margin-bottom: 0;
    }
    p {
      margin: 0;
    }
    > li{
      display: table-row;
      > * {
        display: table-cell;
        // text-align: right;
      }
      &:before,
      > svg {
        color: var(--main);
        font-size: 1.2em;
      }
      &:before {
        @include font-base-bold;
        content: "\2014";
      }
      &.li-svg:before {
        content: "";
      }
      > div {
        padding-top: .75em;
        padding-left: .5em;
      }
      &:first-child > div {
        padding-top: 0;
      }
    }
    ul, ol {
      > li:first-child > div {
        padding-top: .75em;
      }
    }
  }
  ol {
    counter-reset: item calc(var(--item, 1) - 1);
    > li{
      &:before {
        content: counter(item) ". ";
        counter-increment: item;
        white-space: nowrap;
      }
    }
  }
  dt, dd {
    &:not(:last-child) {
      margin-bottom: .75em;
    }
  }
  blockquote {
    &:not(h1, h2, h3, h4, h5, h6, .subtitle, .font-base) {
      @include font-quotes;
      font-size: larger;
    }
    position: relative;
    color: var(--subtitle);
    padding-inline: 1.25em;
    width: fit-content;
    margin: 1em auto 2em;
    &:not(#aux) {
      > svg.quote-left,
      > svg.quote-right {
        margin: 0;
        height: $line-height-cursive * 1em;
      }
    }
    &:not(.quotes, .dittos) {
      padding-inline: 1.5em;
      &:after,
      &:before {
        font-size: 2em;
        line-height: .625;
        font-weight: 900;
        content: '“';
      }
      &:after {
        content: '”';
      }
    }
    > svg.quote-left,
    > svg.quote-right,
    &:after,
    &:before {
      color: var(--main);
      position: absolute;
      top: 0;
      left: 0;
    }
    > svg.quote-right,
    &:after {
      top: unset;
      left: unset;
      bottom: 0;
      right: 0;
    }
    cite {
      @include font-base-bold;
      display: block;
      text-align: right;
      margin-top: .5em;
      color: var(--subtitle);
      &:before {
        content: '— ';
        color: $grey;
      }
    }
  }
  table {
    margin-bottom: 1em;
    @if not $chamfer or $radius <= .01 {
      filter: drop-shadow($shadow);
    }
  }
  mark.sign {
    position: relative;
    display: inline-block;
    background-color: transparent;
    color: inherit;
    svg:first-child {
      position: absolute;
      top: -0.125em;
      left: -0.25em;
      width: calc(100% + 0.5em);
      height: calc(100% + 0.25em);
      margin: 0;
      @keyframes headline-dash {
        0% {
          stroke-dasharray: 0 1500;
        }
        20%, 80%{
          stroke-dasharray: 1500 1500;
          opacity: 1;
        }
        100% {
          opacity: 0;
        }
      }
      fill: none;
      stroke: var(--main);
      stroke-width: .25em;
      stroke-linecap: round;
      stroke-linejoin: round;
      animation-name: headline-dash;
      animation-duration: 5s;
      animation-iteration-count: infinite;
      animation-delay: 1s;
    }
  }
  hr {
    border: none;
    width: 1em;
    height: 1em;
    margin: 2em auto;
    @if $chamfer {
      filter: drop-shadow(-2em 0 $grey) drop-shadow(2em 0 $grey);
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'%3E%3Cpolygon fill='%23#{ str-slice(#{ $grey }, 2) }' points='50 0, 100 50, 50 100, 0 50'/%3E%3C/svg%3E");
    } @else if not $chamfer {
      border-radius: 50%;
      background-color: $grey;
      box-shadow: 2em 0 $grey, -2em 0 $grey;
    }
  }
  .footnote-ref,
  .footnote-backref {
    display: inline-block;
    font-size: 0.75em;
    min-height: auto;
    @if $icon-buttons-rounded {
      &:before,
      &:after {
        @include circle;
      }
    }
  }
  .footnote-ref {
    margin-left: .25em;
  }
  .footnote-backref {
    padding: 0 .25em;
    // @if $chamfer and $radius > .75 {
    //   &:before,
    //   &:after {
    //     @include radius(0em, .75em);
    //   }
    // }
  }
  .footnotes {
    padding: 0;
  }
  .buttons {
    align-items: flex-end;
    margin-top: 1.5em;
    &:not(:last-child) {
      margin-bottom: 1.5em;
    }
  }
  :not(.button, button, li, code) > svg {
    color: var(--main);
  }
  :not(.button, button, li, .sign) > svg {
    margin-right: .25em;
    &:not(:first-child > :first-child) {
      margin-left: .25em;
    }
  }
  :not(.button, button) > svg {
    position: relative;
    top: 0.125em;
  }
  .highlight {
    filter: drop-shadow($shadow);
  }
  .list-inline {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1em;
    li {
      display: flex;
      gap: .25em;
      line-height: 1.25;
      &:before {
        content: none;
      }
      > svg {
        top: 0;
      }
      > div {
        padding: 0;
      }
    }
  }
}
.align-left ul,
.align-left ol,
ul.align-left,
ol.align-left {
  margin-left: 0;
  margin-right: auto;
}
ul.align-center,
ol.align-center,
.align-center table,
table.align-center {
  margin-left: auto;
  margin-right: auto;
}
.align-right table,
table.align-right {
  margin-left: auto;
  margin-right: 0;
}
.align-right ul,
.align-right ol,
ul.align-right,
ol.align-right {
  margin-left: auto;
  margin-right: 0;
  direction: rtl;
  text-align: right;
  > li {
    direction: ltr;
    > div {
      padding-left: 0;
      padding-right: .75em;
    }
  }
}
// Fix in page sections
.align-right .description {
  ul, ol {
    margin-left: auto;
    margin-right: 0;
  }
}
@media (min-width: $screen-xl) {
  .align--xl-left {
    ul, ol {
      margin-left: 0;
    }
  }
  .align--xl-center {
    table {
      margin-left: auto;
    }
  }
  .align--xl-right {
    table {
      margin-left: auto;
      margin-right: 0;
    }
    ul, ol {
      direction: rtl;
      text-align: right;
      margin-left: auto;
      margin-right: 0;
      > li {
        direction: ltr;
        > div {
          padding-left: 0;
          padding-right: .75em;
        }
      }
    }
  }
}
.font-base {
  @include font-base;
}
.price {
  @include font-base-bold;
  font-size: 1.8em;
  color: var(--main);
  s {
    @include font-base;
  }
}
.sitemap-header-link:not([aux]) {
  color: inherit;
}
