.form {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 1em;
}
.form__item {
  position: relative;
  flex-grow: 1;
  &:not(.contact__full) {
    width: 210px;
  }
  > *,
  .form__select:not(.form__select--pre) {
    width: 100%;
  }
}
.form__geo {
  display: none;
}
.form__geo-map {
  width: 100%;
  aspect-ratio: 16/9;
  @include radius(0em, $radius * 1rem / 1em);
}
/*! purgecss start ignore */
.leaflet-popup-content {
  max-width: calc(100vw - 10em);
}
/*! purgecss end ignore */
.form__hidden {
  display: none;
}
.form__fieldset {
  display: flex;
  flex-direction: column;
  gap: 1em;
  padding: .5625em 1em;
  text-align: left;
  --border: color-mix(in srgb, var(--similar), var(--invert));
}
.form__fieldset--x {
  flex-direction: row;
  flex-wrap: wrap;
}
.form__option {
  display: flex;
  align-items: baseline;
  gap: .5em;
}
.form__option--consent {
  font-size: .75em;
  text-align: left;
  width: 100%;
}
.form__label {
  display: block;
  @include font-base-bold;
  margin-left: $radius;
  margin-bottom: .25em;
}
.form__content {
  h3, h4, h5, h6 {
    &:not(.aux) {
      margin-top: .75em;
    }
  }
}
.form__title {
  margin: .5em 0 0;
}
.form__hint {
  margin-top: .25rem;
  font-size: .75em;
  color: var(--subtitle);
  p, ul, ol {
    &:not(:last-child) {
      margin-bottom: .125em;
    }
  }
  ul, ol {
    > li:not(.aux) > div:not(.aux) {
      padding-top: 0;
    }
  }
}
.form__content,
.form__hint {
  margin-left: $radius + .5em;
  width: calc(100% - #{ $radius + .5em } * 2);
}
/*! purgecss start ignore */
.form__error,
.form__submit {
  color: $white;
  background-color: red;
  margin-top: 1em;
  padding: 1em;
  scroll-margin-top: 3em;
  width: 100%;
  text-align: left;
  @include radius;
  svg.close {
    float: right;
    cursor: pointer;
  }
  ul {
    margin: 0;
  }
}
.form__submit {
  background-color: grey;
  svg {
    position: relative;
    top: .125em;
    &.spin {
      animation: spin 10s linear infinite;
    }
  }
}
.form__submit--success {
  background-color: green;
}
.form__submit--error {
  background-color: red;
}
/*! purgecss end ignore */
#search__form ~ .form {
  display: none;
}
.form--fill-inputs {
  --border: color-mix(in srgb, var(--similar), var(--invert) 25%);
  input:not([type="checkbox"], [type="radio"], [type="hidden"]),
  textarea,
  select {
    @if $chamfer and $radius > .01 {
      border: none;
      @if not $buttons-rounded and $radius <= .01 {
        border: var(--outline) var(--border) solid;
        box-shadow: $shadow inset;
      } @else {
        @include radius;
        clip-path: var(--chamfer-int-outline);
      }
    } @else {
      border: var(--outline) var(--border) solid;
      box-shadow: $shadow inset;
      border-radius: $radius;
    }
    background-color: var(--similar);
    color: var(--similar-text);
  }
  @if $chamfer and $radius > .01 {
    fieldset {
      border: none;
    }
    .form__item {
      position: relative;
    }
    .form__item-border {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 2.5em;
      clip-path: var(--chamfer);
      background-color: var(--border);
      &:has(~ [style], ~ * [style]) {
        --border: red;
      }
    }
    .form__item-border--textarea {
      min-height: 5.72em;
    }
    .form__item-border--fieldset {
      top: 0.6em;
      height: calc(100% - 0.6em);
      &:before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        @extend %radius;
        --outline: 1px;
        clip-path: var(--chamfer-int-outline);
        background-color: var(--bg-color);
      }
      ~ * {
        position: relative;
        z-index: 1;
      }
    }
    legend {
      background-color: var(--bg-color);
    }
  }
}

.form--labels-out {
  :not(.aux)::placeholder,
  select:has(option:checked[value=""]) {
    color: transparent;
  }
}

.form__file {
  position: relative;
  .form__file--button {
    position: absolute;
    float: left;
    height: 2.5em;
    z-index: 1;
  }
  .form__input {
    width: 100%;
    @if not $chamfer and $radius > .01 {
      &:not(.form--fill-inputs) {
        border-top-left-radius: $radius;
        border-bottom-left-radius: $radius;
      }
    }
  }
  ::file-selector-button {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    cursor: pointer;
    z-index: 2;
  }
  .form__input::before {
    content: attr(data-placeholder);
    // font-size: 1em;
    @include font-button;
    margin-inline: -1rem 1rem;
    padding-inline: 3.25rem 1.5rem;
    opacity: 0;
  }
  .button--font-alt + .form__input::before {
    @include font-button(alt);
  }
}

.form__pre {
  position: absolute;
  left: 0;
  translate: 0 -100%;
  width: auto;
  z-index: 1;
  .form__select {
    border: none;
    box-shadow: none;
    background-color: initial;
    padding-right: .5em;
    background-position: right;
  }
}
.form__input:has(+ .form__pre) {
  padding-left: 5.6em;
}

.form__item[data-showif]:not(.form__item--show) {
  display: none;
}
