.container,
.boxes {
  display: flex;

  --columns-min: 1;
  --columns-max: var(--columns-min, 1);

  @include fluid-size(--columns-gap-max-default, 1, 1, 2);
  --columns-gap-max: var(--columns-gap-min, var(--columns-gap-max-default, 1));

  @include fluid-size(--gap-width, 1em, var(--columns-gap-min, 1), var(--columns-gap-max));
  column-gap: var(--gap-width);
  --columns-gap-ny: 1;
  --columns-gap-y: calc(var(--gap-width) * var(--columns-gap-ny));
  row-gap: var(--columns-gap-y);

  &:not(:has(> .bg)) {
    --columns-gap-ny: 2;
  }
  &:not([class*="justify"]) {
    justify-content: center;
  }
  &:not(.slider__items) {
    flex-wrap: wrap;
    > * {
      flex-shrink: 1;
    }
  }
}
.boxes > *,
.box,
// Nex selectors for parents
.boxes--top,
.boxes--bottom,
.boxes--radius,
.slider__items {
  @include fluid-size(--columns, 1, var(--columns-min), var(--columns-max));
  --column-width: calc(100cqw / var(--columns));

  // gap per column (gc) = gap width * gap number / columns number
  --gc: calc(var(--gap-width) * (var(--columns) - 1) / var(--columns));

  --box-w: calc(var(--column-width) - var(--gc));
  --box-width: var(--box-w);

  --box-padding-min: 1;
  --box-padding-max: var(--box-padding-min, 1);
  @include fluid-size(--box-padding, 1em, var(--box-padding-min), var(--box-padding-max));
}
.boxes > *,
.box {
  width: var(--box-width, 100%);
  @media (min-width: $screen-xl) {
    order: var(--order, unset);
  }
  > .box {
    --columns: 1;
  }
}

// Default padding and gap when columns is small (> 2 and container <= sm)
.boxes--sm {
  --columns-gap-max-default: 1;
  --box-padding-min: 1;
}

.boxes--left,
.slider__track:has(> .boxes--left) + .slider__bullets {
  flex-direction: row-reverse;
}
.boxes--top,
.boxes--bottom {
  display: block;
  columns: var(--box-width);
  &:not(.gallery-wrap *) {
    margin-bottom: calc(0em - var(--columns-gap-y));
  }
  > * {
    break-inside: avoid;
    margin-inline: auto; // is not posible align and justify items, grow is recomended
    margin-bottom: var(--columns-gap-y);
  }
}
.boxes--top {
  direction: rtl;
}

.boxes--radius {
  overflow: hidden;
  @include radius(var(--box-padding));
}

.section--full.ph .columns--gap-0 {
  min-height: var(--full-height-section, 100lvh);
}
