
// MAIN

.image {
  @include radius-parent;
  position: relative;
  width: fit-content;
  margin: 0 auto;
  display: flex;
  justify-content: center;
  .box__icon--top {
    color: $white;
    filter: drop-shadow($shadow);
    margin: 0;
    position: absolute;
    top: calc(50% - var(--icon-size) / 2);
    left: calc(50% - var(--icon-size) / 2);
    z-index: 2;
  }
}
.image__inner {
  @include radius;
  position: relative;
  max-width: 100%;
  width: auto; // for svg that have width
  height: auto;
  fill: initial;
  overflow: hidden;
  &:not(.image--border *) {
    --radius-end: inherit;
  }
}
svg.image__inner {
  height: 100%;
  &:not([width]) {
    width: var(--box-inner);
  }
}

// ALIGN

.image--left {
  justify-content: flex-start;
  margin-left: 0;
}
.image--right {
  justify-content: flex-end;
  margin-right: 0;
}


// TYPES

.image:has(.image__inner--gradient) {
  width: calc(100% - var(--image-margin, 0em) * 2);
}
.image__inner--gradient {
  background-image: linear-gradient($main, rgba($main, 0));
  &:has(+ .image__inner) {
    position: absolute;
  }
}


// RATIO

%image--ratio {
  width: 100%;
  .image__inner {
    width: 100%;
    aspect-ratio: var(--image-ratio);
    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center;
    }
  }
}
.image--circle,
.image--1x1 {  --image-ratio: 1;    @extend %image--ratio; }
.image--3x2 {  --image-ratio: 3/2;  @extend %image--ratio; }
.image--2x3 {  --image-ratio: 2/3;  @extend %image--ratio; }
.image--16x9 { --image-ratio: 16/9; @extend %image--ratio; }
.image--9x16 { --image-ratio: 9/16; @extend %image--ratio; }
.image--18x6 { --image-ratio: 18/6; @extend %image--ratio; }
.image--6x18 { --image-ratio: 6/18; @extend %image--ratio; }
.image--2x1 {  --image-ratio: 2/1;  @extend %image--ratio; }
.image--1x2 {  --image-ratio: 1/2;  @extend %image--ratio; }
.image--4x3 {  --image-ratio: 4/3;  @extend %image--ratio; }
.image--3x4 {  --image-ratio: 3/4;  @extend %image--ratio; }


// BORDER

.image--border {
  --image-border-width: .5em;
  padding: var(--image-border-width);
  &:before {
    content: '';
    @include radius-child;
    @include like-bg-cover;
    background-color: var(--base);
  }
  .image__inner {
    --radius-padding: calc(var(--image-border-width) * -1);
    // background-color: var(--bg-color);
  }
  picture[style] {
    background-image: none;
  }
}


// CONTAIN

.image--contain {
  .image__inner {
    // display: grid;
    // place-content: center;
    background-image: none;
    img {
      // height: auto;
      // max-height: calc(100cqw * var(--image-ratio));
      object-fit: contain;
    }
  }
  &:not(.image--inset:not(.image--border)) {
    .image__inner {
      img {
        @include radius-child;
      }
    }
  }
}


// INSET

.image--inset {
  // &, svg.image__inner:not([width]) {
  //   width: 100cqw;
  // }
  --image-margin: calc(var(--box-padding) * -1);
  margin: var(--image-margin);
  width: calc(100% - var(--image-margin) * 2);
  --image-inset-block-margin: calc(max(var(--box-padding), 1em) - var(--box-gap));
  // --image-inset-padding-radius:;
  --radius-padding: var(--image-inset-padding-radius);
  .image__inner {
    --radius-padding: calc(var(--image-inset-padding-radius) - var(--image-border-width, 0em));
  }
  // Not first child
  &:not(:where(
    :first-child,
    .bg-color + *,
    .box__title.hide + *
  )) {
    margin-top: var(--image-inset-block-margin);
    &, .image__inner {
      --radius-top: 0em;
    }
  }
  // Not last child
  &:not(:last-child, :has(+ .box__button.hide:last-child)) {
    margin-bottom: var(--image-inset-block-margin);
    &, .image__inner {
      --radius-bottom: 0em;
    }
  }
}


// FOR IFRAME

iframe.image__inner {
  width: var(--box-inner);
}
.image--inset {
  iframe.image__inner {
    width: calc(100cqw + var(--box-padding) * 2);
  }
}
.content {
  iframe.image__inner {
    width: calc(100cqw + var(--box-padding) * 2);
  }
}
// .image {
//   &:not(
//     .image--3x2,
//     .image--2x3,
//     .image--16x9,
//     .image--9x16,
//     .image--18x6,
//     .image--6x18,
//     .image--2x1,
//     .image--1x2,
//     .image--4x3,
//     .image--3x4,
//     .image--1x1,
//     .image--circle
//   ) {
//     &.image--border {
//       iframe.image__inner {
//         width: var(--box-inner);
//         height: calc(var(--box-inner) * .5625);
//         max-width: calc((var(--box-inner) - 1em));
//         max-height: calc((var(--box-inner) - 1em) * .5625); // 16x9
//       }
//     }
//     &.image--inset {
//       iframe.image__inner {
//         width: calc(100cqw + var(--box-padding) * 2);
//         height: calc((100cqw + var(--box-padding) * 2) * .5625); // 16x9
//       }
//       &.image--border {
//         iframe.image__inner {
//           max-width: calc(100cqw - 1em + var(--box-padding) * 2);
//           max-height: calc((100cqw - 1em + var(--box-padding) * 2) * .5625); // 16x9
//         }
//       }
//     }
//   }
// }


// move here for priority


// CIRCLE

.image--circle {
  &, .image__inner {
    &:not(.aux) { // only for priority
      @include circle;
    }
  }
  @if $chamfer {
    &.image--border {
      padding: calc(var(--image-border-width) / .7071);
    }
  }
}


// WITH ICON TOP

.image--icon-top .image__inner {
  overflow: hidden;
  &:after {
    content: '';
    @include like-bg-cover;
    background-color: $dark;
    opacity: .5;
  }
}


// IFRAME POSTER

[data-iframe] {
  cursor: pointer;
  svg {
    width: 4.25em;
    height: 3em;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: var(--base);
    fill: var(--base-text);
    transition: color .1s;
    filter: drop-shadow($shadow);
  }
  &:hover svg {
    color: var(--hover);
    fill: var(--hover-text);
  }
  &:active svg {
    color: var(--active);
    fill: var(--active-text);
  }
}


// SVG EXCEPTIONS

.box:not(.bg)
> .image:not(.image--border):not(.content *)
> .image__inner:where(svg, img[src*=".svg"]) { // svg image without radius when not background
  overflow: unset;
  @include hide-radius;
}
svg.image__inner {
  width: 100%;
}
// SVG from IMG tag like SVG tag
/*! purgecss start ignore */
img[src*=".svg"].image__inner {
  object-fit: contain;
}
/*! purgecss end ignore */


// SECTION IMAGE WITH PADDING HIDE

.ph > .container--fluid {
  > .image,
  > .columns--gap-0.slider__items .image:not(.content *) {
    &:before,
    > .image__inner {
      overflow: unset;
      @include hide-radius;
    }
  }
}


// SHADOW

.image:not(.box.bg *, .box--hide-shadow *) {
  filter: drop-shadow($shadow);
}


// BOX HOVER

.box:has(> .box__button):not(:has(
  .box .box__button,
  > .box__button ~ .box__button,
  :is(a, [data-h], [data-b]):not(.box__button)
)) {
  > .image .image__inner {
    &:where(svg),
    img {
      transition: transform .3s;
    }
  }
  // HOVER
  &:has(.search__result-item-link:focus),
  &:hover,
  &:focus {
    > .image .image__inner:not(.image__inner--hover) {
      &:where(svg),
      img {
        transform: scale(1.2) rotate(2deg);
      }
    }
  }
  // 2N CHILD
  &:nth-child(2n) {
    &:has(.search__result-item-link:focus),
    &:hover,
    &:focus {
      > .image .image__inner:not(.image__inner--hover) {
        &:where(svg),
        img {
          transform: scale(1.2) rotate(-2deg);
        }
      }
    }
  }
}
.box {
  // IMAGE HOVER
  > .image--hover {
    .image__inner:not(.image__inner--hover) {
      transition: transform .3s, opacity .3s;
    }
    .image__inner--hover {
      position: absolute;
      opacity: 0;
      transition: opacity .3s;
    }
    &.image--border {
      .image__inner--hover {
        margin: 0;
        max-width: inherit;
        max-height: inherit;
      }
    }
  }
  // IMAGE HOVER HOVER
  &:has(.search__result-item-link:focus),
  &:hover,
  &:focus {
    > .image--hover {
      .image__inner:not(.image__inner--hover) {
        opacity: 0;
      }
      .image__inner--hover {
        opacity: 1;
      }
    }
  }
  // GRAYSCALE
  &:not(#aux) {
    > .image--grayscale {
      &.bg-figure-image,
      .image__inner {
        filter: var(--grayscale);
        transition: filter .3s;
      }
    }
    // HOVER
    &:has(.search__result-item-link:focus),
    &:hover,
    &:focus,
    &:active {
      > .image--grayscale {
        &.bg-figure-image,
        .image__inner {
          filter: none;
          transform: none;
        }
      }
    }
  }
}
