// Box
.box {
  container: box / inline-size;
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  max-width: 100%;
  padding: var(--box-padding);
  --box-inner: calc(100cqw - var(--box-padding) * 2);
  --box-gap: 1rem;
  gap: var(--box-gap);
  &.bg {
    @include radius-parent(var(--box-padding));
  }
  > *:not(.box, .image, .box__icon, .box__button:not(.bg > *)) {
    width: 100%;
  }
}
.box--hide-shadow {
  filter: none;
}

// Hover, focus and active when only a button
.box:has(> .box__button):not(:has(
  .box .box__button,
  > .box__button ~ .box__button,
  .href:not(.box__link, .box__button)
)).bg:not(.box--hide-shadow) {
  transition: filter .1s, transform .1s;
  @if $buttons-3d {
    transform: translateY(-.25em);
    &.box--button-hide {
      > .bg-color--3d {
        transform: translateY(.25em);
        @include like-bg-cover;
        content: '';
        transition: background-color .1s, transform .1s;
        background-color: var(--link);
      }
    }
    // @if $chamfer {
    //   filter: drop-shadow($shadow);
    // } @else {
    //   &.box--button-hide {
    //     > .bg-color--3d {
    //       box-shadow: $shadow;
    //     }
    //   }
    // }
  } @else {
    filter: drop-shadow($shadow);
    transform: translateY(-$shadow-top);
  }
  // Hover
  &:has(.search__result-item-link:focus),
  &:hover,
  &:focus {
    filter: drop-shadow($shadow-half);
    @if $buttons-3d {
      transform: translateY(-.125em);
      &.box--button-hide {
        > .bg-color--3d {
          transform: translateY(.125em);
        }
      }
    } @else {
      transform: translateY(-$shadow-top / 2);
    }
  }
  // Active
  &:has(.search__result-item-link:active),
  &:active {
    filter: none;
    transform: none;
    @if $buttons-3d {
      &.box--button-hide {
        > .bg-color--3d {
          transform: none;
        }
      }
    }
  }
}

// Padding
.container,
.box:where(:not(.bg)) {
  --box-padding-min: 0;
}
.box:where(.bg:not(.boxes > *, [class*="box--padding-"])) {
  --box-padding-min: 1;
}

// Span
.box--span {
  --box-span-min: 1;
  --box-span-max: var(--box-span-min, 1);
  @include fluid-size(--box-span, 1, var(--box-span-min), var(--box-span-max));
  --box-width: calc(var(--box-w) * var(--box-span) + var(--gap-width) * (var(--box-span) - 1));
}

// Grow
.box--grow {
  flex-grow: 1;
}

// Ratio
.box--ratio {
  --box-ratio: 16/9;
  min-height: calc(var(--box-width) / (var(--box-ratio)));
}

// Direction
.boxes--top,
.boxes--bottom {
  > .box--grow {
    margin-inline: 0;
    width: 100%;
  }
}

@if $radius > 0.01 {

  // Radius min
  .box {
    --image-inset-padding-radius: var(--box-padding);
  }
  .box:not(:has(
    > :is(
      .image:not(.image--inset), /* Image */
      .box__button:not(.hide), /* Box button */
      .map:is(*, .boxes:last-child > .box:last-child > *), /* Map */
    ):is(
      /* First child */
      :first-child,
      .bg-color + *,
      .box__title.hide + *,
      /* Last child */
      :last-child,
      :has(+ .box__button.hide:last-child)
    )
  )) {
    --radius-padding: 0em;
    --image-inset-padding-radius: 0em;
  }

  // Hide radius
  .box--hide-radius > {
    .bg-color {
      @include hide-radius;
    }
    .image--inset {
      --image-inset-radius: 0;
    }
  }

}












// Slider full screen
// .ph .columns--gap-0.slider__items > .box {
//   padding: 3.2em 5em;
// }

// Section header title
// .body-menu--logo .section--header .container > .box__title i {
//   font-size: 1.25em;
// }
// end








// Type
.box__block {
  margin-top: 0;
}
.box__block:where(:not(
  :first-child,
  .bg-color + *,
  .box__title.hide + *
)) {
  margin-top: Max(calc(var(--box-gap) * 2), 2em);
}
.box__title:where(:not(
  :first-child,
  .bg-color + *,
  .box__title.hide + *
  )) + .box__block {
  margin-top: 0;
}

// Icon
.box__icon {
  color: var(--base);
}
.box__icon--side {
  order: var(--icon-side-order, -1);
  transform: translateY(($line-height-title - $font-size-title) * 1em / 2);
}
.box__icon--bottom {
  display: flex;
  align-items: center;
  justify-content: var(--align, center);
  gap: .5em;
  width: 100%;
  @include radius-parent(0em, #{ $menu-bar });
  &:before,
  &:after {
    content: '';
    display: inline-block;
    width: 2em;
    height: $menu-bar-double;
    background-color: var(--base);
    @include radius-child;
  }
  svg {
    font-size: 2em;
  }
}
.box__title:not(.hide) + .box__icon--bottom{
  margin-top: calc(-.75 * var(--box-gap));
}
.box__title:not(.hide) + .box__subtitle,
.box__title.underline + *:not(.box__block),
.box__icon--bottom + *:not(.box__block) {
  margin-top: calc(-.5 * var(--box-gap));
}
.box__icon--top {
  display: block;
  width: var(--icon-size);
  height: var(--icon-size);
  color: var(--base);
  margin-block: 0;
  margin-inline: var(--align-margin);
  // First child
  &:where(
    :first-child,
    .bg-color + *,
    .box__title.hide + *
  ) {
    margin-top: .5em;
  }
}
// Icon size
:root {
  --icon-size: 6em;
}

// Title
.box__title {
  display: flex;
  flex-wrap: wrap;
  justify-content: var(--align, center);
  align-items: baseline;
  gap: .25em;
  margin: 0;
  .href:not(.box__link, :hover, :focus, :active) {
    color: inherit;
  }
  // Remove underline if next is icon bottom
  &:has(+ .box__icon--bottom) .underline:after {
    content: none;
  }
  &:has(> .box__icon) {
    text-align: left;
    &:is(.align-right *) {
      text-align: right;
    }
  }
  // &:has(.box__icon--side) {
  //   flex-wrap: nowrap;
  // }
}
.align-center > {
  .box__title {
    text-align: center;
  }
  .box__title--side {
    text-align: left;
  }
}
// Container title size
.container > .box__title {
  @include fluid-size(--fhs-pre, 1em, .875, 1.125);
  --fhs: calc(var(--fhs-pre) * var(--hs, 1) * #{ $font-size-title });
}


// Link
.box:has(> .box__button):not(:has(
  .box .box__button,
  > .box__button ~ .box__button,
  .href:not(.box__link, .box__button)
)) {
  cursor: pointer;
  // Hover
  &:has(.search__result-item-link:focus),
  &:hover,
  &:focus {
    .box__link {
      @include link-hover;
    }
  }
  // Active
  &:active {
    .box__link {
      @include link-active;
    }
  }
}

// Subtitle
.box__subtitle {
  margin: 0;
}

// Content
.box__content {
  margin-bottom: auto;
  width: 100%;
  // em {
  //   @include font-base;
  // }
  strong,
  em {
    // display: inline-block;
    font-size: 1em;
    color: inherit;
  }
}
.box__content--small {
  font-size: .75em;
  margin-top: 0;
}

// Data
// .box__title + .data {
//   margin-top: calc(.5rem - var(--box-gap));
// }

// Button
.box__button {
  // First child
  &:where(
    :first-child,
    .bg-color + *,
    .box__title.hide + *
  ) {
    margin-bottom: auto;
  }
  // Last child
  &:where(:last-child) {
    margin-top: auto;
  }
  // Not background
  &:not(.bg > *) {
    margin-inline: var(--align-margin, auto);
  }
  // Text link style
  &:not(.button) {
    display: flex;
    justify-content: center;
    gap: .25em;
    svg {
      color: var(--main);
    }
  }
}
.box--button-hide > {
  .box__button {
    // display: none;
    background-image: none;
    z-index: unset;
  }
}

// Card
.box--card {
  // overflow: hidden;
  // @include radius;
  justify-content: flex-end;
  > .box__link {
    --link: #{ $white };
  }
}
.bg-card {
  flex-grow: 1;
  margin: calc(-1 * var(--box-padding));
  margin-bottom: calc(var(--box-padding) - var(--box-gap));
  position: relative;
}
.bg-card:after {
  content: '';
  display: block;
  --bg-card-width: calc(100cqw + var(--box-padding) * 2);
  --bg-card-height: calc(var(--bg-card-width) / (var(--box-ratio)) - 100%);
  width: var(--bg-card-width);
  height: var(--bg-card-height);
  position: absolute;
  bottom: calc(-1 * var(--bg-card-height));
  left: calc(var(--box-padding)* -1);
  background-image: linear-gradient(transparent, rgba(0, 0, 0, 0.5) calc(var(--box-gap) * 2), #000);
  @include radius-child;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  z-index: -1;
}
