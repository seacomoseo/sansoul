// --box-padding
// --box-inner

.columns {
  display: flex;

  --columns-min: 1;
  --columns-max: 1;
  --columns-gap-min: min(var(--columns-gap-max), 1);
  @include fluid-size(--columns-gap-max, 1, 1, 2);

  @include fluid-size(--gap-width, 1em, var(--columns-gap-min), var(--columns-gap-max));
  column-gap: var(--gap-width);
  --columns-gap-ny: 1;
  --columns-gap-y: calc(var(--gap-width) * var(--columns-gap-ny));
  row-gap: var(--columns-gap-y);

  @include fluid-size(--columns, 1, var(--columns-min), var(--columns-max));
  --column-width: calc(100cqw / var(--columns));

  // gap per column (gc) = gap width * gap number / columns number
  --gc: calc(var(--gap-width) * (var(--columns) - 1) / var(--columns));

  --box-w: calc(var(--column-width) - var(--gc));
  --box-width: var(--box-w);
  --box-padding: calc(var(--columns-gap-max) * 1em);

  > * {
    width: var(--box-width);
    @media (min-width: $screen-xl) {
      order: var(--order, unset);
    }
  }
  &:not(:has(> .bg)) {
    --columns-gap-ny: 2;
  }
  &:not([class*="justify"]) {
    justify-content: center;
  }
  &:not(.slider__items) {
    flex-wrap: wrap;
    > * {
      flex-shrink: 1;
    }
  }
}

// Default padding and gap when columns is small (> 2 and container <= sm)
.columns--sm {
  --columns-gap-max: 1;
  --box-padding: 1em;
}

.columns--left {
  flex-direction: row-reverse;
}
.columns--top,
.columns--bottom {
  display: block;
  columns: var(--box-width);
  &:not(.gallery-wrap *) {
    margin-bottom: calc(0em - var(--columns-gap-y));
  }
  > * {
    break-inside: avoid;
    margin-inline: auto; // is not posible align and justify items, grow is recomended
    margin-bottom: var(--columns-gap-y);
  }
}
.columns--top {
  direction: rtl;
}

.columns--grid {
  display: grid;
  // grid-template-columns: repeat(auto-fill, minmax(var(--box-width), .5fr));
  --grid-columns: 2;
  grid-template-columns: repeat(var(--grid-columns), 1fr);
  &.columns--{
    @media (min-width: $screen-sm) {
      &5, &6 {
        --grid-columns: 3;
      }
    }
    @media (min-width: $screen-md) {
      &3 {
        --grid-columns: 3;
      }
      &4, &5, &6 {
        --grid-columns: 4;
      }
    }
    @media (min-width: $screen-lg) {
      &5 {
        --grid-columns: 5;
      }
      &6 {
        --grid-columns: 6;
      }
    }
  }
}

.columns--radius {
  overflow: hidden;
  @include radius(var(--box-padding));
}

.section--full.ph .columns--gap-0 {
  min-height: var(--full-height-section, 100lvh);
}
