
*, :before, :after {
  box-sizing: border-box;
}
html {
  font-family: Arial, Helvetica, sans-serif;
}
body {
  display: grid;
  place-items: center;
  place-content: center;
  gap: 1.5em;
  margin: 0;
  padding: 1em;
  height: 100vh;
  background-color: #eee;
  overflow: hidden;
}
a {
  text-decoration: unset;
}
button {
  font-size: 1em;
}
svg {
  padding: .25em;
  fill: currentColor;
}
a, button, .deploy-status {
  display: flex;
}
a,
.deploy-status,
svg {
  width: 2em;
  height: 2em;
}
a,
button,
.deploy-status {
  border-radius: 50%;
  border: solid .125em white;
}
.deploy-status {
  font-size: 2rem;
  color: #333;
  box-shadow: 0 0 0 .25rem #333;
  position: relative;
  svg {
    animation: spin 10s linear infinite;
    width: auto;
    height: auto;
    z-index: 1;
  }
  &:after {
    content: '';
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    background: inherit;
    border-radius: 50%;
  }
  &.timer:before {
    content: '';
    background: transparent;
    width: calc(100% + .25em);
    height: calc(100% + .25em);
    position: absolute;
    top: -.125em;
    left: -.125em;
    border-radius: 50%;
    // Animation
    background-image: conic-gradient(#3a69c7 var(--angle), transparent 0deg 360deg);
    animation: 5s animate 5s linear alternate infinite;
  }
}
.deploy-status:before,
.info {
  box-shadow: 0 0 1rem rgba(0, 0, 0, .15);
}

@keyframes spin {
  100% {
    transform: rotate(360deg);
  }
}

@keyframes animate {
	to {
		--angle: 360deg;
	}
}

@property --angle {
	syntax: "<angle>"; /* this can be angle or percentage */
	initial-value: 0deg;
	inherits: false;
}

.info {
  max-width: 384px;
  width: 100%;
  background-color: #333;
  color: white;
  border-radius: 1.3em;
  padding: 1em;
  margin: 0;
  &:before,
  &:after {
    content: '';
    display: inline-block;
    position: absolute;
    bottom: -1em;
    left: 0;
    width: 100%;
    height: 1em;
  }
  &:after {
    content: '';
    bottom: -12px;
    left: 6px;
    width: 0;
    height: 0;
    border: 10px solid transparent;
    border-top: 12px solid var(--input, white);
    border-bottom: 0;
  }
}
.info__text {
  font-size: small;
  word-break: break-word;
  margin-block: 0 1em;
}
.info__status {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1em;
  margin-bottom: 1em;
}
.info__status-success {
  background-color: #BEF9C6;
}
.info__status-building {
  background-color: #F6E0A5;
}
.info__status-canceled {
  background-color: #D2D5DB;
}
.info__status-error {
  background-color: #F4BCBA;
}
.info__status > * {
  border-radius: .3em;
  font-weight: 500;
  color: #333;
  padding: 1px .6em;
  // display: flex;
  // align-items: center;
  // position: relative;
  // gap: .3em;
  // svg {
  //   fill: currentColor;
  //   color: inherit;
  //   width: 1em;
  //   height: 1em;
  //   flex-shrink: 0;
  //   flex-grow: 0;
  //   vertical-align: sub;
  //   // font-size: 1.25em;
  // }
}
.info__buttons {
  display: grid;
  gap: 1em;
  > :not(.aux) {
    border-radius: .3em;
    color: white;
    padding: 0 .9em 0 .3em;
    display: inline-flex;
    align-items: center;
    gap: .3em;
    width: auto;
    height: auto;
    cursor: pointer;
    &:not([disabled]):hover {
      filter: brightness(1.25);
    }
  }
  .google-spreadsheets-link {
    background-color: #188038;
  }
  .github-link {
    background-color: #2b3137;
  }
  .netlify-link {
    background-color: #32e6e2;
    color: #0c2a2a;
  }
  .cloudflare-link {
    background-color: #f6821f;
  }
  .rebuild {
    background-color: steelblue;
  }
  .clear-cache {
    background-color: cadetblue;
  }
  .rebuild[disabled],
  .clear-cache[disabled] {
    cursor: not-allowed;
    background-color: #a9a9a9;
    opacity: .6;
  }
  .admin-link {
    background-color: teal;
  }
  .home-link {
    background-color: darkslategrey;
  }
}
