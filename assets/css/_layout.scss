// VARIABLES
:root {
  color-scheme: light dark;
  // scrollbar
  scrollbar-width: thin;
  scrollbar-color:
    light-dark(rgba(186, 186, 192, .75),  rgba(31, 32, 32, .75))
    light-dark(rgba(186, 186, 192, .125), rgba(31, 32, 32, .125));
  // divider
  --divider-height: min(12.5cqw, 5.5em);
  // duotone
  --dt-main: currentColor;
  --dt-main-op: 1;
  --dt-alt: currentColor;
  --dt-alt-op: .5;
  // form
  --form-control-color: var(--alt);
  --form-control-disabled: #959495;
  // outline
  --outline: #{ $menu-bar-double };
  // screen width
  --vw-min: #{ $screen-min / 1px };
  --vw-max: #{ $screen-max / 1px };
  --vw: #{ $screen-min / 1px };
  @media (min-width: $screen-xs) { --vw: #{ $screen-xs / 1px }; }
  @media (min-width: $screen-sm) { --vw: #{ $screen-sm / 1px }; }
  @media (min-width: $screen-md) { --vw: #{ $screen-md / 1px }; }
  @media (min-width: $screen-lg) { --vw: #{ $screen-lg / 1px }; }
  @media (min-width: $screen-xl) { --vw: #{ $screen-xl / 1px }; }
  --run: calc(var(--vw-max) - var(--vw-min));
}

// EXTENDS LIKE FUNCTIONS
@if $radius > 0.01 or $buttons-rounded or $icon-buttons-rounded {
  %radius,
  .body-menu--sticky .menu__subitems {
    // radius
    --radius: #{ $radius };
    --radius-padding: 0em;
    @if $chamfer {
      --diamond: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
    }
    --radius-top: var(--radius-calc);
    --radius-bottom: var(--radius-calc);
    @if $chamfer {
      --radius-calc: calc((((var(--radius) + var(--radius-padding)) / .7071) - var(--radius-padding)) * .7071);
      --chamfer: polygon(
        var(--radius-top) 0%,
        calc(100% - var(--radius-top)) 0%,
        100% var(--radius-top),
        100% calc(100% - var(--radius-bottom)),
        calc(100% - var(--radius-bottom)) 100%,
        var(--radius-bottom) 100%,
        0% calc(100% - var(--radius-bottom)),
        0% var(--radius-top)
      );
      // Outline
      --radius-outline: calc((((var(--radius) + var(--outline)) / .7071) - var(--outline)) * .7071);
      --chamfer-outline: polygon(
        var(--radius) 0%,
        calc(100% - var(--radius)) 0%,
        100% var(--radius),
        100% calc(100% - var(--radius)),
        calc(100% - var(--radius)) 100%,
        var(--radius) 100%,
        0% calc(100% - var(--radius)),
        0% var(--radius)
        ,
        var(--radius) 0%
        ,
        var(--radius-outline) var(--outline),
        var(--outline) var(--radius-outline),
        var(--outline) calc(100% - var(--radius-outline)),
        var(--radius-outline) calc(100% - var(--outline)),
        calc(100% - var(--radius-outline)) calc(100% - var(--outline)),
        calc(100% - var(--outline)) calc(100% - var(--radius-outline)),
        calc(100% - var(--outline)) var(--radius-outline),
        calc(100% - var(--radius-outline)) var(--outline)
        ,
        var(--radius-outline) var(--outline)
      );
      --chamfer-int-outline: polygon(
        var(--radius-outline) var(--outline),
        var(--outline) var(--radius-outline),
        var(--outline) calc(100% - var(--radius-outline)),
        var(--radius-outline) calc(100% - var(--outline)),
        calc(100% - var(--radius-outline)) calc(100% - var(--outline)),
        calc(100% - var(--outline)) calc(100% - var(--radius-outline)),
        calc(100% - var(--outline)) var(--radius-outline),
        calc(100% - var(--radius-outline)) var(--outline)
      );
      --outline-diamond: calc(var(--outline) / .7071);
      --diamond-outline: polygon(
        50% 0%, 100% 50%, 50% 100%, 0% 50%
        ,
        50% 0%
        ,
        50% var(--outline-diamond),
        var(--outline-diamond) 50%,
        50% calc(100% - var(--outline-diamond)),
        calc(100% - var(--outline-diamond)) 50%
        ,
        50% var(--outline-diamond)
      );
    } @else {
      --radius-calc: calc(var(--radius) + var(--radius-padding));
      --radius-end: var(--radius-top) var(--radius-top) var(--radius-bottom) var(--radius-bottom);
    }
  }
}
// END VARIABLES

*, :before, :after {
  box-sizing: border-box;
}
html {
  @include fluid-size(font-size, 1px, $font-size-min, $font-size-max);
  scroll-behavior: smooth;
  @include font-base;
  overflow-x: hidden;
}
body {
  font-size: var(--fsb);
  color: var(--text, $text);
  background-color: $light;
  word-break: break-word;
  overflow-wrap: break-word;
  // hyphens: auto;
}
a {
  @include link;
}
strong,
.strong,
.button--font-alt:not(.button, button) > i,
dt,
sup,
sub,
legend {
  @include font-base-bold;
}
i {
  font-style: inherit;
}
s,
del {
  color: var(--subtitle);
}
figure {
  margin-inline: 0;
}
picture {
  overflow: hidden;
}
picture,
img {
  max-width: 100%;
  height: auto;
}
picture[style] {
  background-image: var(--pre-bg);
}
picture > img {
  display: block;
  margin: 0 auto;
}
video {
  object-fit: cover;
  object-position: center;
}
p {
  text-wrap: pretty;
  margin: 0 0 1em;
  &:last-child {
    margin-bottom: 0;
  }
}
ul {
  padding-left: 1.125em;
}
h1, h2, h3, h4, h5, h6 {
  @include font-title;
  display: block;
  margin-top: 0;
  margin-bottom: 1rem;
  color: var(--title, $dark);
  @include fluid-size(--fhs-pre, 1cqw, -.7, .3);
  --fhs: calc(var(--fhs-pre) * var(--hs, 1) + var(--hs, 1) * #{ $font-size-title } * 1em);
  font-size: var(--fhs);
  // text-wrap: balance;
  &:last-child {
    margin-bottom: 0;
  }
}
h1 { --hs: 2; }
h2 { --hs: 1.8; }
h3 { --hs: 1.6; }
h4 { --hs: 1.4; }
h5 { --hs: 1.2; }
h6 { --hs: 1; }
header,
section {
  position: relative;
  padding-top: 3em;
  padding-bottom: 3em;
  // overflow: hidden;
}
input:not([type="checkbox"], [type="radio"], [type="hidden"]),
textarea,
select,
fieldset {
  --outline: 1px;
  display: block;
  padding: .5625em 1em .84375em;
  background-color: transparent;
  border: var(--outline) solid transparent;
  border-bottom: var(--outline) solid var(--border);
  outline: none;
  transition: border .1s;
  font-weight: $font-weight-base;
  color: inherit;
  &:focus {
    border-color: var(--main);
  }
  &::placeholder {
    color: var(--text);
    opacity: .5;
  }
}
input:not([type="checkbox"], [type="radio"], [type="hidden"]),
select {
  height: 2.5em;
}
textarea {
  min-height: 5.72em;
  resize: none;
}
select {
  appearance: none;
  cursor: pointer;
  background: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='grey' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E") no-repeat right 1em center;
  background-size: .5em .625em;
  padding-right: 2.125em;
}
fieldset {
  border: 1px var(--border) dashed;
  color: inherit;
  border-radius: $radius;
}
legend {
  color: var(--subtitle);
  padding: 0 .25em;
  margin-left: -.25em;
}
[type='radio'],
[type="checkbox"] {
  /* Remove most all native input styles */
  appearance: none;
  /* For iOS < 15 */
  // background-color: var(--form-background);
  background-color: $white;
  /* Not removed via appearance */
  margin: 0;

  font: inherit;
  color: currentColor;
  width: 1em;
  height: 1em;
  border: 0.15em solid var(--form-control-color);
  border-radius: 0.15em;
  transform: translateY(-0.075em);

  display: inline-grid;
  place-content: center;
  position: relative;
  top: .0625em;
  &:checked {
    --form-control-color: green;
  }
}
[type='radio']:before,
[type="checkbox"]:before {
  content: '';
  width: 0.7em;
  height: 0.7em;
  clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
  transform: scale(0);
  transform-origin: bottom left;
  transition: .12s transform ease-in-out;
  box-shadow: inset 1em 1em var(--form-control-color);
  /* Windows High Contrast Mode */
  background-color: CanvasText;
}
[type='radio']:checked:before,
[type="checkbox"]:checked:before {
  transform: scale(1);
}
[type='radio']:focus,
[type="checkbox"]:focus {
  outline: Max(2px, 0.15em) solid var(--main);
  outline-offset: Max(2px, 0.15em);
}
[type='radio']:disabled,
[type="checkbox"]:disabled {
  --form-control-color: var(--form-control-disabled);
  color: var(--form-control-disabled);
  cursor: not-allowed;
}
[type='radio'] {
  border-radius: 50%;
}
.table-inner {
  display: flex;
  justify-content: center;
  filter: drop-shadow($shadow);
}
table {
  @include radius;
  border-collapse: collapse;
  word-break: normal;
  // white-space: nowrap;
  // width: max-content;
  max-width: 100%;
  color: var(--title);
  overflow-x: auto;
  display: block;
  margin-right: auto;
  &:not(.table-sm, .container.bg *, .boxes *) {
    @include fluid-size(max-width, 1px, $screen-min / 1px, $container-width-max-xl / 1px);
    margin-inline: calc(var(--container-margin-side) + 2em);
  }
}
th, td {
  padding: .5em 1em;
  &:first-child {
    text-align: left;
    // white-space: normal;
    // @media (min-width: $screen-lg) {
      position: sticky;
      left: 0;
      background: inherit;
      max-width: calc(var(--container-inner) / 2);
      z-index: 1;
      &:after {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        display: block;
        width: 1px;
        height: 100%;
        background-color: rgba($grey, .125);
      }
    // }
  }
}
tr {
  background-color: var(--bg-color);
  &:nth-child(2n) {
    background-color: var(--tr2);
  }
  &:hover {
    color: var(--active-text);
    background-color: var(--active);
  }
}
thead tr {
  color: var(--main-text);
  background-color: var(--main);
  svg {
    fill: var(--main-text);
  }
}
/*! purgecss start ignore */
iframe {
  @include radius;
  width: 100%;
  height: auto;
  aspect-ratio: 16/9;
  &:not(#aux) {
    border: none;
    object-fit: initial;
  }
}
/*! purgecss end ignore */
svg {
  fill: currentColor;
  width: 1em;
  height: 1em;
  flex-shrink: 0;
  flex-grow: 0;
}
// [href^="/draws.svg"] {
//   color: $main;
// }
pre {
  @include radius;
}
:not(pre) > code  {
  background-color: var(--main);
  color: var(--main-text);
  padding: 0 0.3em;
  @if $chamfer and $radius >= 0.1 {
    border-radius: 0.1em;
  } @else {
    border-radius: $radius;
  }
  > svg {
    color: inherit;
  }
}
.hide {
  @include ofuscate;
}
.lcp {
  width: calc(100vw - .5em);
  height: calc(100lvh - .5em);
  position: absolute;
  // z-index: 1000;
}
[data-more] {
  position: relative;
  &:before {
    content: attr(data-more);
  }
  i {
    @include ofuscate;
  }
}

/*! purgecss start ignore */
[id]:not(.divider, .modal) {
  scroll-margin-top: 3em;
}
#search__form ~ {
  article,
  section {
    display: none;
  }
}
.compare {
  [href="/draws.svg#xmark"] {
    color: red;
    fill: red;
  }
  [href="/draws.svg#check"] {
    color: green;
    fill: green;
  }
}
::selection {
  color: $main-contrast-neutral;
  background: $main;
}
/*! purgecss end ignore */

.compare {
  td, th {
    &:not(:first-child) {
      text-align: center;
    }
  }
}