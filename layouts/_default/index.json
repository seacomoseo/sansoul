{{- $data := site.Data -}}
{{- $index := slice -}}
{{- range
  (where
  (where
  (where
  (where
  (where
  site.Pages
  "Kind" "ne" "section")
  "File.TranslationBaseName" "!=" "legal")
  "File.TranslationBaseName" "!=" "privacy")
  "File.TranslationBaseName" "!=" "cookies")
  "File.TranslationBaseName" "!=" "search")
-}}

  {{- $icon := index $data.utilities.types .Type -}}
  {{- if $data.styles.icons.emojis_default -}}
    {{- $icon = $icon.code -}}
  {{- else -}}
    {{- $icon = $icon.icon -}}
  {{- end -}}

  {{- $image := index $data.utilities.types .Type -}}
  {{- if $data.styles.icons.emojis_default -}}
    {{- $image = $image.code -}}
  {{- else -}}
    {{- $image = $image.icon -}}
  {{- end -}}

  {{- $image := .Params.image -}}
  {{- if $image -}}
    {{- if strings.HasPrefix $image "http" -}}
      {{- $image = partial "functions/iframe-poster" $image | default $image -}}
    {{- else -}}
      {{- with resources.Get (print "/media/" $image) -}}
        {{- $image = .RelPermalink -}}
      {{- end -}}
    {{- end -}}
  {{- end -}}

  {{- $type  := .Type -}}
  {{- if in (slice "categories" "tags" "authors") .Type -}}
    {{- $type = "taxonomies" -}}
  {{- end -}}
  {{- $type_list     := merge $data.lists.all (index $data.lists $type) -}}
  {{- $reading_time  := cond (not $type_list.hide_reading_time) (i18n "reading_time" .ReadingTime) "" -}}

	{{- $categories := slice -}}
  {{- range .Params.categories -}}
    {{- $categories = $categories | append ($.GetPage (print "categories/" .)).Title -}}
  {{- end -}}

	{{- $tags := slice -}}
  {{- range .Params.tags -}}
    {{- $tags = $tags | append ($.GetPage (print "tags/" .)).Title -}}
  {{- end -}}

	{{- $author := "" -}}
  {{- with .Params.author -}}
    {{- $author = ($.GetPage (print "authors/" .)).Title -}}
  {{- end -}}
  
	{{- $contents := .Plain -}}
  {{- if not $contents -}}
	  {{- $contents = "" -}}
    {{- range partial "functions/sections" . -}}
      {{- range partial "functions/section-searchable" . -}}
        {{- with .title       }}{{ $contents = print $contents " \n\n " . }}{{ end -}}
        {{- with .hanchor     }}{{ $contents = print $contents " \n\n " . }}{{ end -}}
        {{- with .subtitle    }}{{ $contents = print $contents " \n\n " . }}{{ end -}}
        {{- with .description }}{{ $contents = print $contents " \n\n " . }}{{ end -}}
        {{- with .label       }}{{ $contents = print $contents " \n\n " . }}{{ end -}}
      {{- end -}}
    {{- end -}}
  {{- end -}}
  

  {{- $index = $index | append (dict
    "title"         .Title
    "link"          .RelPermalink
    "description"   ((.Description | default .Plain) | markdownify | htmlUnescape | plainify | truncate 155)
    "date"          (partial "functions/date" (dict "date" (.Params.Lastmod | default .Params.date_ini)) "type" .Type)
    "date_end"      (partial "functions/date" (dict "date" (.Params.date_end)) "type" .Type)
    "contents"      $contents
    "image"         $image
    "reading_time"  $reading_time
    "type"          (i18n .Type 1)
    "icon"          $icon
    "categories"    $categories
    "tags"          $tags
    "author"        $author
  ) -}}

{{- end -}}

{{- if hugo.IsProduction -}}
  {{- $index | jsonify -}}
{{- else -}}
  {{- $index | jsonify (dict "prefix" "" "indent" "  ") -}}
{{- end -}}